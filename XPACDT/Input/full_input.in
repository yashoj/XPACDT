##############################################################################
# This is supposed to be a full documentation of possible input parameters! ##
# More comments go here ######################################################
##############################################################################

$system                     # general parameters

seed = 0                    # Seed for random number generator
dof = 4                     # the number of degrees of freedom
job = sample	                # The job type (possible: sample, propagate, analyze, plot)
Interface = OneDPolynomial  # the interface to the potential to be used (possible: OneDPolynomial)
folder = test               # the folder for the trajectories

# optional:
picklefile = NameHere.dat   # optional name of pickle file - else: pickle.dat
time = 0 fs                 # the current time of the system in either fs or au

# override or add (for sampling with existing folder)
# continue (for continueing a propagation)
# intermediate_write (for writing the pickle file every output timestep)
$end

##############################################################################

$OneDPolynomial # must match the interface specified; specific to each interface

a = 0 0 0.5
x0 = 0
$end

##############################################################################

$rpmd                       # RPMD input

beads = 4                   # Number of beads used; 1 or even numbers; TODO: different numbers
beta = 8.0                  # Beta used for the springs
$end

##############################################################################

$thermostat                 # thermostat input

method = MassiveAndersen    # Thermostat method (possible: MassiveAndersen; desired:...)
time = 100 fs               # timescale for thermostattting
$end

##############################################################################

$sampling               # sampling input

method = Wigner         # method to be used for sampling (possible: Wigner, Quasiclassical, Fixed, Thermostatted)
samples = 1000          # number of samples to be collected

# optional:
modes = 2 3 4           # modes to be sampled (possible: 'linear', 'nonlinear', list of integers, empty)
quantum_numbers = 0 0 2 # the quantum number used in Quasiclassical sampling for each mode
temperature = 300       # in Kelvin
time = 10 fs            # time between samples in fs or au

$end

##############################################################################

$nuclei_propagator             # nuclei propagator input

method = VelocityVerlet # method to be used for propagating (possible: VelocityVerlet)
timestep = 0.01 fs      # timestep in fs or au

# optional:
# TODO
$end

##############################################################################

$propagation	    # propagation input

time_end = 1.0 au # end time for propagation

# optional:
time_start = 1.0 au # start time set for the system
time_output = 1.0 # time step used for the full system and logging; if not given, the timestep of the nuclei is used
$end

##############################################################################

$coordinates	           # coordinates given here

type = mass-value      # coordinate format (possible: mass-value, xyz); TODO: description here
1.0 2.0 3.0
2.0 1.0 4.0
$end

##############################################################################

$momenta               # momenta, must be the same ordering as coordinates

1.0 2.0 3.0
4.0 5.0 6.0
$end

##############################################################################

### more comments!!
